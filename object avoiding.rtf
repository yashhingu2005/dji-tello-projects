{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue255;\red0\green0\blue0;
\red0\green0\blue255;\red40\green120\blue134;\red25\green82\blue94;\red19\green120\blue72;\red118\green55\blue23;
\red238\green126\blue8;\red144\green1\blue18;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c100000;\cssrgb\c19216\c54118\c59608;\cssrgb\c11765\c39216\c44314;\cssrgb\c3529\c53333\c35294;\cssrgb\c54118\c28235\c11373;
\cssrgb\c95294\c56863\c0;\cssrgb\c63922\c8235\c8235;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #region VEXcode Generated Robot Configuration\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 vex\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  *\cb1 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  urandom\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Brain should be defined by default\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 brain\cf4 \strokec4 =\cf6 \strokec6 Brain\cf4 \strokec4 ()\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Robot configuration code\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 brain_inertial = \cf6 \strokec6 Inertial\cf4 \strokec4 ()\cb1 \
\cb3 left_drive_smart = \cf6 \strokec6 Motor\cf4 \strokec4 (Ports.PORT12, \cf8 \strokec8 1.0\cf4 \strokec4 , \cf5 \strokec5 False\cf4 \strokec4 )\cb1 \
\cb3 right_drive_smart = \cf6 \strokec6 Motor\cf4 \strokec4 (Ports.PORT7, \cf8 \strokec8 1.0\cf4 \strokec4 , \cf5 \strokec5 True\cf4 \strokec4 )\cb1 \
\
\cb3 drivetrain = \cf6 \strokec6 SmartDrive\cf4 \strokec4 (left_drive_smart, right_drive_smart, brain_inertial, \cf8 \strokec8 200\cf4 \strokec4 )\cb1 \
\cb3 distance_9 = \cf6 \strokec6 Distance\cf4 \strokec4 (Ports.PORT9)\cb1 \
\
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # generating and setting random seed\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf9 \strokec9 initializeRandomSeed\cf4 \strokec4 ():\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 wait\cf4 \strokec4 (\cf8 \strokec8 100\cf4 \strokec4 , \cf10 \strokec10 MSEC\cf4 \strokec4 )\cb1 \
\cb3     xaxis = brain_inertial.\cf9 \strokec9 acceleration\cf4 \strokec4 (\cf10 \strokec10 XAXIS\cf4 \strokec4 ) * \cf8 \strokec8 1000\cf4 \cb1 \strokec4 \
\cb3     yaxis = brain_inertial.\cf9 \strokec9 acceleration\cf4 \strokec4 (\cf10 \strokec10 YAXIS\cf4 \strokec4 ) * \cf8 \strokec8 1000\cf4 \cb1 \strokec4 \
\cb3     zaxis = brain_inertial.\cf9 \strokec9 acceleration\cf4 \strokec4 (\cf10 \strokec10 ZAXIS\cf4 \strokec4 ) * \cf8 \strokec8 1000\cf4 \cb1 \strokec4 \
\cb3     systemTime = \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 timer\cf4 \strokec4 .system() * \cf8 \strokec8 100\cf4 \cb1 \strokec4 \
\cb3     urandom.seed(\cf5 \strokec5 int\cf4 \strokec4 (xaxis + yaxis + zaxis + systemTime)) \cb1 \
\cb3     \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Initialize random seed \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9 initializeRandomSeed\cf4 \strokec4 ()\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 vexcode_initial_drivetrain_calibration_completed = \cf5 \strokec5 False\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf9 \strokec9 calibrate_drivetrain\cf4 \strokec4 ():\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 # Calibrate the Drivetrain Inertial\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 global\cf4 \strokec4  vexcode_initial_drivetrain_calibration_completed\cb1 \
\cb3     sleep(\cf8 \strokec8 200\cf4 \strokec4 , \cf10 \strokec10 MSEC\cf4 \strokec4 )\cb1 \
\cb3     \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 print\cf4 \strokec4 (\cf11 \strokec11 "Calibrating"\cf4 \strokec4 )\cb1 \
\cb3     \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 next_row\cf4 \strokec4 ()\cb1 \
\cb3     \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 print\cf4 \strokec4 (\cf11 \strokec11 "Inertial"\cf4 \strokec4 )\cb1 \
\cb3     brain_inertial.\cf9 \strokec9 calibrate\cf4 \strokec4 ()\cb1 \
\cb3     \cf5 \strokec5 while\cf4 \strokec4  brain_inertial.is_calibrating():\cb1 \
\cb3         sleep(\cf8 \strokec8 25\cf4 \strokec4 , \cf10 \strokec10 MSEC\cf4 \strokec4 )\cb1 \
\cb3     vexcode_initial_drivetrain_calibration_completed = \cf5 \strokec5 True\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 clear_screen\cf4 \strokec4 ()\cb1 \
\cb3     \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 set_cursor\cf4 \strokec4 (\cf8 \strokec8 1\cf4 \strokec4 , \cf8 \strokec8 1\cf4 \strokec4 )\cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Calibrate the Drivetrain\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9 calibrate_drivetrain\cf4 \strokec4 ()\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 #endregion VEXcode Generated Robot Configuration\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # ------------------------------------------\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \'a0\'a0Project:      VEXcode Project\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \'a0\'a0Author:       VEX\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \'a0\'a0Created:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \'a0\'a0Description:  VEXcode IQ Python Project\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # ------------------------------------------\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Library imports\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 vex\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  *\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 brain_inertial.\cf9 \strokec9 calibrate\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9 wait\cf4 \strokec4 (\cf8 \strokec8 3\cf4 \strokec4 , \cf10 \strokec10 SECONDS\cf4 \strokec4 )\cb1 \
\cf9 \cb3 \strokec9 calibrate_drivetrain\cf4 \strokec4 ()\cb1 \
\cf9 \cb3 \strokec9 wait\cf4 \strokec4 (\cf8 \strokec8 3\cf4 \strokec4 , \cf10 \strokec10 SECONDS\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 rd = \cf8 \strokec8 0\cf4 \cb1 \strokec4 \
\cb3 ld = \cf8 \strokec8 0\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Begin project code\cf4 \cb1 \strokec4 \
\
\
\cf2 \cb3 \strokec2 # while True:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #     drivetrain.drive(FORWARD)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #     if distance_9.object_distance(MM) <= 70:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #         drivetrain.turn_for(RIGHT, 90, DEGREES)\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3         \cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 while\cf4 \strokec4  \cf5 \strokec5 True\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3      \cf5 \strokec5 if\cf4 \strokec4  distance_9.\cf9 \strokec9 object_distance\cf4 \strokec4 (\cf10 \strokec10 MM\cf4 \strokec4 ) <= \cf8 \strokec8 70\cf4 \strokec4 :\cb1 \
\cb3          \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 set_cursor\cf4 \strokec4 (\cf8 \strokec8 1\cf4 \strokec4 , \cf8 \strokec8 1\cf4 \strokec4 )\cb1 \
\cb3          \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 print\cf4 \strokec4 (\cf11 \strokec11 "detected"\cf4 \strokec4 )\cb1 \
\cb3          drivetrain.\cf9 \strokec9 stop\cf4 \strokec4 ()\cb1 \
\cb3          drivetrain.\cf9 \strokec9 drive_for\cf4 \strokec4 (\cf10 \strokec10 REVERSE\cf4 \strokec4 ,\cf8 \strokec8 50\cf4 \strokec4 ,\cf10 \strokec10 MM\cf4 \strokec4 )\cb1 \
\cb3          \cb1 \
\cb3          drivetrain.\cf9 \strokec9 turn_for\cf4 \strokec4 (\cf10 \strokec10 RIGHT\cf4 \strokec4 , \cf8 \strokec8 90\cf4 \strokec4 , \cf10 \strokec10 DEGREES\cf4 \strokec4 )\cb1 \
\
\cb3          drivetrain.\cf9 \strokec9 stop\cf4 \strokec4 ()\cb1 \
\cb3          rd = distance_9.\cf9 \strokec9 object_distance\cf4 \strokec4 (\cf10 \strokec10 MM\cf4 \strokec4 )\cb1 \
\cb3          drivetrain.\cf9 \strokec9 turn_for\cf4 \strokec4 (\cf10 \strokec10 LEFT\cf4 \strokec4 , \cf8 \strokec8 90\cf4 \strokec4 , \cf10 \strokec10 DEGREES\cf4 \strokec4 )\cb1 \
\
\cb3          drivetrain.\cf9 \strokec9 turn_for\cf4 \strokec4 (\cf10 \strokec10 LEFT\cf4 \strokec4 , \cf8 \strokec8 90\cf4 \strokec4 , \cf10 \strokec10 DEGREES\cf4 \strokec4 )\cb1 \
\cb3          \cf9 \strokec9 wait\cf4 \strokec4 (\cf8 \strokec8 1\cf4 \strokec4 ,\cf10 \strokec10 SECONDS\cf4 \strokec4 )\cb1 \
\cb3          drivetrain.\cf9 \strokec9 stop\cf4 \strokec4 ()\cb1 \
\cb3          ld = distance_9.\cf9 \strokec9 object_distance\cf4 \strokec4 (\cf10 \strokec10 MM\cf4 \strokec4 )\cb1 \
\cb3          drivetrain.\cf9 \strokec9 turn_for\cf4 \strokec4 (\cf10 \strokec10 RIGHT\cf4 \strokec4 , \cf8 \strokec8 90\cf4 \strokec4 , \cf10 \strokec10 DEGREES\cf4 \strokec4 )\cb1 \
\cb3          \cf5 \strokec5 if\cf4 \strokec4  rd > ld:\cb1 \
\cb3              drivetrain.\cf9 \strokec9 turn_for\cf4 \strokec4 (\cf10 \strokec10 RIGHT\cf4 \strokec4 , \cf8 \strokec8 90\cf4 \strokec4 , \cf10 \strokec10 DEGREES\cf4 \strokec4 )\cb1 \
\cb3              \cf9 \strokec9 wait\cf4 \strokec4 (\cf8 \strokec8 1\cf4 \strokec4 ,\cf10 \strokec10 SECONDS\cf4 \strokec4 )\cb1 \
\cb3          \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3              drivetrain.\cf9 \strokec9 turn_for\cf4 \strokec4 (\cf10 \strokec10 LEFT\cf4 \strokec4 , \cf8 \strokec8 90\cf4 \strokec4 , \cf10 \strokec10 DEGREES\cf4 \strokec4 )\cb1 \
\cb3              \cf9 \strokec9 wait\cf4 \strokec4 (\cf8 \strokec8 1\cf4 \strokec4 ,\cf10 \strokec10 SECONDS\cf4 \strokec4 )\cb1 \
\cb3      \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3          \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 set_cursor\cf4 \strokec4 (\cf8 \strokec8 1\cf4 \strokec4 , \cf8 \strokec8 1\cf4 \strokec4 )\cb1 \
\cb3          \cf7 \strokec7 brain\cf4 \strokec4 .\cf7 \strokec7 screen\cf4 \strokec4 .\cf9 \strokec9 print\cf4 \strokec4 (\cf11 \strokec11 "not detected"\cf4 \strokec4 )\cb1 \
\cb3          drivetrain.\cf9 \strokec9 drive\cf4 \strokec4 (\cf10 \strokec10 FORWARD\cf4 \strokec4 )\cb1 \
\
\
\
}